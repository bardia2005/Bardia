from pygame import mixer
import pygame
import random
import math

# Initializing The Pygame
pygame.init()

# Creating The Screen
width = 800
height = 600
screen = pygame.display.set_mode((width, height))

# Background
background = pygame.image.load('Background.png')

# Background Sound
mixer.music.load('Background.wav')
mixer.music.play(-1)

# Caption And Icon
pygame.display.set_caption(('Space Invaders'))
icon = pygame.image.load('UFO.png')
pygame.display.set_icon(icon)

# Player
player_img = pygame.image.load('Spaceship.png')
playerX = int(width / 2) - 30
playerY = height - 150
playerX_speed = 0

# Enemies
enemy_img = []
enemyX = []
enemyY = []
enemyX_speed = []
enemyY_speed = []
enemy_counter = 6
out_of_screen = 2000

for i in range(enemy_counter):
    enemy_img.append(pygame.image.load('Monster.png'))
    enemyX.append(random.randint(0, height - 150))
    enemyY.append(random.randint(50, 150))
    enemyX_speed.append(4)
    enemyY_speed.append(40)


# Bullet

# Ready - Hasn't Been Fired(Not On The Screen)
# Fired - Bullet Is Currently Moving
bullet_img = pygame.image.load('Bullet.png')
bulletX = 0
bulletY = height - 150
bulletX_speed = 0
bulletY_speed = 10
bullet_state = 'ready'

# Score
score_point = 0
font =  pygame.font.Font('freesansbold.ttf', 32)

textX = 10
textY = 10

# Game_Over_Text
game_over_font = pygame.font.Font('freesansbold.ttf', 64)

def score_text(x, y):
    score = font.render("Score :" + ' ' + str(score_point), True, (255, 255, 255))
    screen.blit(score, (x, y))

def game_over():
    game_over_text = game_over_font.render('GAME OVER !!!', True, (0, 0, 0))
    screen.blit(game_over_text, (int(width / 2)- 200, int(height / 2)- 100))

def player(x, y):
    screen.blit(player_img, (x, y))

def enemy(x, y, i):
    screen.blit(enemy_img[i], (x, y))

def bullet_fired(x, y):
    global bullet_state
    bullet_state = 'fired'
    screen.blit(bullet_img, (x + 16, y + 10))

def isCollision(enemyX, enemyY, bulletX, bulletY):
    distance = math.sqrt(math.pow(enemyX - bulletX, 2) + math.pow(enemyY - bulletY, 2))

    # Checking If The Bullet Hits The Enemy
    if distance < 32:
        return True
    else:
        return False

# Game Loop
running = True

while running:

    # RGB
    screen.fill((0, 0, 0))

    # Background Image
    screen.blit(background, (0, 0))

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                playerX_speed = -5
            if event.key == pygame.K_RIGHT:
                playerX_speed = 5
            if event.key == pygame.K_SPACE:
                if bullet_state == 'ready':
                    laser = mixer.Sound('Laser.wav')
                    laser.play()
                    # Get The Current X of Spaceship
                    bulletX = playerX
                    bullet_fired(playerX, bulletY)

        if event.type == pygame.KEYUP:
            if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
                playerX_speed = 0

    # Checking The Player Boundries
    playerX += playerX_speed

    if playerX <= 0:
        playerX = 0
    if playerX > width - 64:
        playerX = width - 64

    # Checking The Enemies Boundries
    for i in range(enemy_counter):

        # Game Over
        if enemyY[i] > 350:
            for j in range(enemy_counter):
                enemyY[j] = out_of_screen

            game_over()
            break

        enemyX[i] += enemyX_speed[i]
        if enemyX[i] <= 0:
            enemyX_speed[i] = 3
            enemyY[i] += enemyY_speed[i]
        elif enemyX[i] >= width - 64:
            enemyX_speed[i] = -3
            enemyY[i] += enemyY_speed[i]

        # Collision
        collision = isCollision(enemyX[i], enemyY[i], bulletX, bulletY)
        if collision:
            explosion = mixer.Sound('Explosion.wav')
            explosion.play()
            bulletY = height - 150
            bullet_state = 'ready'
            score_point += 1
            enemyX[i] = random.randint(0, height - 150)
            enemyY[i] = random.randint(50, 150)

        enemy(enemyX[i], enemyY[i], i)

    # Bullet Movement
    if bullet_state == 'fired':
        bullet_fired(bulletX, bulletY)
        bulletY -= bulletY_speed

    if bulletY <= 0:
        bulletY = height - 150
        bullet_state = 'ready'

    player(playerX, playerY)
    score_text(textX, textY)
    pygame.display.update()

